module.exports = {
  server: {
    port: 4000,                      // The port the server will run on
    hostname: 'localhost',           // Hostname for the server (can be changed to your production domain)
    protocol: 'http',                // Protocol for the server (http or https)
    logLevel: 'info',                // Log level for the server (e.g., info, warn, error, debug)
    enableCors: true,                // Whether or not to enable CORS (Cross-Origin Resource Sharing)
  },

  ethereum: {
    infuraUrl: 'https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID',  // URL for Infura or other Ethereum providers
    privateKey: 'YOUR_PRIVATE_KEY',                                       // Ethereum private key for transactions (be cautious with private keys)
  },

  database: {
    mongoUri: 'mongodb://localhost:27017/superpynode',  // MongoDB URI for connecting to your database
    databaseName: 'superpynode',                          // Name of the database
  },

  security: {
    enableHttps: false,                    // Whether to enable HTTPS (set to true in production)
    sslCertPath: '/path/to/cert.pem',       // Path to SSL certificate (needed if enableHttps is true)
    sslKeyPath: '/path/to/key.pem',         // Path to SSL key (needed if enableHttps is true)
    corsAllowedOrigins: ['*'],              // CORS allowed origins (use '*' for all or list specific domains)
  },

  api: {
    baseUrl: '/api',                           // Base URL for API routes
    version: 'v1',                             // API versioning (can be v1, v2, etc.)
    timeout: 30000,                            // Timeout for API requests in milliseconds
  },

  node: {
    rpcUrl: 'https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID',  // Ethereum node RPC URL for interaction with the blockchain
    contractAddress: '0xYourContractAddressHere',                    // Address of the smart contract to interact with
    contractAbi: [],                           // ABI of the contract (if applicable, add the actual ABI array here)
    gasPrice: '20000000000',                   // Default gas price in wei (optional)
  },

  logging: {
    enableLogging: true,                       // Whether logging is enabled
    logFilePath: './logs/superpynode.log',     // Path to log file
    maxLogSize: '10m',                         // Max size for a log file before it rotates
    logFileCount: 5,                           // Number of old log files to keep
  },

  healthCheck: {
    enableHealthCheck: true,                  // Enable health check endpoint
    healthCheckUrl: '/health',                 // URL for the health check endpoint
    interval: 60000,                           // Health check interval in milliseconds
  },

  nodeMonitoring: {
    enableMonitoring: true,                   // Whether node monitoring is enabled
    monitoringInterval: 5000,                 // Interval for monitoring node stats (in milliseconds)
  }
};
